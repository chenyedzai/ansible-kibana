---

- name: Test distribution
  assert:
    that: >
      ansible_os_family == "RedHat" or
      ansible_os_family == 'Debian'

- name: Create Kibana YUM repo file
  yum_repository:
    name: elastic
    description: Elastic YUM repo
    baseurl: "{{ kibana_yum_repo_url }}"
    gpgkey: "{{ kibana_yum_repo_key }}"
    params: "{{ kibana_yum_repo_params }}"
  when: >
    ansible_os_family == 'RedHat'
  tags:
    - kibana_pkg

- name: Install Kibana GPG key
  apt_key:
    url: "{{ kibana_apt_repo_key }}"
  when: >
    ansible_os_family == 'Debian'
  tags:
    - kibana_pkg
    - kibana_aptrepo

- name: Create Kibana APT repo file
  apt_repository:
    repo: "{{ kibana_apt_repo_string }}"
  when: >
    ansible_os_family == 'Debian'
  tags:
    - kibana_pkg
    - kibana_aptrepo

- name: Install Kibana package
  package:
    name: "{{ kibana_pkg }}"
  notify:
    - Restart Kibana service
  tags:
    - kibana_pkg

- name: Check installed plugins
  shell: >
    {{ kibana_plugins_bin }} list | sed 's/@.*//' 2>/dev/null
  when: >
    kibana_plugins | length > 0
  register: kibana_plugins_installed_results
  changed_when: false
  tags:
    - kibana_plugins
    - kibana_plugins_check

- name: Install plugins
  shell: >
    {{ kibana_plugins_bin }} install {{ item }}
  when: >
    item[0] != '!' and
    kibana_plugins | length > 0 and (
      kibana_plugins_installed_results is not defined or
      item not in kibana_plugins_installed_results.stdout_lines
    )
  with_items: "{{ kibana_plugins }}"
  notify:
    - Restart Kibana service
  tags:
    - kibana_plugins
    - kibana_plugins_install

- name: Remove plugins
  shell: >
    {{ kibana_plugins_bin }} remove {{ item[1:] }}
  when: >
    item[0] == '!' and
    kibana_plugins | length > 0 and (
      kibana_plugins_installed_results is not defined or
      item[1:] in kibana_plugins_installed_results.stdout_lines
    )
  with_items: "{{ kibana_plugins }}"
  notify:
    - Restart Kibana service
  tags:
    - kibana_plugins
    - kibana_plugins_remove

- name: Configure Kibana
  template:
    src: kibana.yml.j2
    dest: "{{ kibana_config_file }}"
  notify:
    - Restart Kibana service
  tags:
    - kibana_config

- name: Enable Kibana service
  service:
    name: "{{ kibana_service }}"
    enabled: yes
  tags:
    - kibana_service

- name: Start Kibana service
  service:
    name: "{{ kibana_service }}"
    state: started
  register: kibana_service_started
  tags:
    - kibana_service
